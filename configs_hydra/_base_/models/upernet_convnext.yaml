# @package _global_
checkpoint_file: https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-base_3rdparty_32xb128-noema_in1k_20220301-2a0ee547.pth
custom_imports:
  allow_failed_imports: false
  imports: mmpretrain.models
data_preprocessor:
  bgr_to_rgb: true
  mean: [123.675, 116.28, 103.53]
  pad_val: 0
  seg_pad_val: 255
  std: [58.395, 57.12, 57.375]
  type: SegDataPreProcessor
model:
  auxiliary_head:
    align_corners: false
    channels: 256
    concat_input: false
    dropout_ratio: 0.1
    in_channels: 384
    in_index: 2
    loss_decode:
      loss_weight: 0.4
      type: CrossEntropyLoss
      use_sigmoid: false
    norm_cfg:
      requires_grad: true
      type: SyncBN
    num_classes: 19
    num_convs: 1
    type: FCNHead
  backbone:
    arch: base
    drop_path_rate: 0.4
    gap_before_final_norm: false
    init_cfg:
      checkpoint: https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-base_3rdparty_32xb128-noema_in1k_20220301-2a0ee547.pth
      prefix: backbone.
      type: Pretrained
    layer_scale_init_value: 1.0
    out_indices: [0, 1, 2, 3]
    type: mmpretrain.ConvNeXt
  data_preprocessor:
    bgr_to_rgb: true
    mean: [123.675, 116.28, 103.53]
    pad_val: 0
    seg_pad_val: 255
    std: [58.395, 57.12, 57.375]
    type: SegDataPreProcessor
  decode_head:
    align_corners: false
    channels: 512
    dropout_ratio: 0.1
    in_channels: [128, 256, 512, 1024]
    in_index: [0, 1, 2, 3]
    loss_decode:
      loss_weight: 1.0
      type: CrossEntropyLoss
      use_sigmoid: false
    norm_cfg:
      requires_grad: true
      type: SyncBN
    num_classes: 19
    pool_scales:
      _args_:
      - [1, 2, 3, 6]
      _target_: builtins.tuple
    type: UPerHead
  pretrained: null
  test_cfg:
    mode: whole
  train_cfg: {}
  type: EncoderDecoder
norm_cfg:
  requires_grad: true
  type: SyncBN
