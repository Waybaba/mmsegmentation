# @package _global_
data_preprocessor:
  bgr_to_rgb: true
  mean: [123.675, 116.28, 103.53]
  pad_val: 0
  seg_pad_val: 255
  std: [58.395, 57.12, 57.375]
  type: SegDataPreProcessor
model:
  backbone:
    contract_dilation: true
    depth: 50
    dilations:
      _args_:
      - [1, 1, 1, 1]
      _target_: builtins.tuple
    norm_cfg:
      requires_grad: true
      type: SyncBN
    norm_eval: false
    num_stages: 4
    out_indices:
      _args_:
      - [0, 1, 2, 3]
      _target_: builtins.tuple
    strides:
      _args_:
      - [1, 2, 2, 2]
      _target_: builtins.tuple
    style: pytorch
    type: ResNetV1c
  data_preprocessor:
    bgr_to_rgb: true
    mean: [123.675, 116.28, 103.53]
    pad_val: 0
    seg_pad_val: 255
    std: [58.395, 57.12, 57.375]
    type: SegDataPreProcessor
  decode_head:
    align_corners: false
    channels: 128
    dropout_ratio: 0.1
    feature_strides: [4, 8, 16, 32]
    in_channels: [256, 256, 256, 256]
    in_index: [0, 1, 2, 3]
    loss_decode:
      loss_weight: 1.0
      type: CrossEntropyLoss
      use_sigmoid: false
    norm_cfg:
      requires_grad: true
      type: SyncBN
    num_classes: 19
    type: FPNHead
  neck:
    in_channels: [256, 512, 1024, 2048]
    num_outs: 4
    out_channels: 256
    type: FPN
  pretrained: open-mmlab://resnet50_v1c
  test_cfg:
    mode: whole
  train_cfg: {}
  type: EncoderDecoder
norm_cfg:
  requires_grad: true
  type: SyncBN
